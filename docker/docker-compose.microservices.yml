services:
  # Nacos service registry
  nacos:
    image: nacos/nacos-server:v2.2.0
    platform: linux/amd64
    container_name: nacos-server
    restart: unless-stopped
    ports:
      - "8848:8848"
      - "9848:9848"
    environment:
      - MODE=standalone
      - JVM_XMS=256m
      - JVM_XMX=256m
    volumes:
      - nacos_data:/home/nacos/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - cloud-drive-network

  # API Gateway
  gateway:
    build:
      context: ../apps/gateway
      dockerfile: ../../docker/Dockerfile.gateway
    container_name: gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      nacos:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR=nacos:8848
    networks:
      - cloud-drive-network

  # User Service
  user-service:
    build:
      context: ../apps/user-service
      dockerfile: ../../docker/Dockerfile.user-service
    container_name: user-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR=nacos:8848
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/cloud_drive
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root123
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    networks:
      - cloud-drive-network

  # File Service
  file-service:
    build:
      context: ../apps/file-service
      dockerfile: ../../docker/Dockerfile.file-service
    container_name: file-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
      redis:
        condition: service_started
      hadoop-namenode:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR=nacos:8848
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/cloud_drive
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root123
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - HADOOP_NAMENODE_HOST=hadoop-namenode
      - HADOOP_NAMENODE_PORT=9000
    networks:
      - cloud-drive-network

  # Admin Service
  admin-service:
    build:
      context: ../apps/admin-service
      dockerfile: ../../docker/Dockerfile.admin-service
    container_name: admin-service
    restart: unless-stopped
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR=nacos:8848
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/cloud_drive
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root123
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    networks:
      - cloud-drive-network

  # Membership Service
  membership-service:
    build:
      context: ../apps/membership-service
      dockerfile: ../../docker/Dockerfile.membership-service
    container_name: membership-service
    restart: unless-stopped
    ports:
      - "8084:8084"
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=nacos:8848
      - SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR=nacos:8848
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/cloud_drive
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root123
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    networks:
      - cloud-drive-network

  # Frontend
  frontend:
    build:
      context: ../apps/frontend
      dockerfile: ../../docker/Dockerfile.frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - gateway
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://gateway:8080
    networks:
      - cloud-drive-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=cloud_drive
      - MYSQL_USER=cloud_drive
      - MYSQL_PASSWORD=cloud123
    volumes:
      - mysql_data:/var/lib/mysql
      - ../sql:/docker-entrypoint-initdb.d
      - ./mysql-init:/docker-entrypoint-initdb.d/extra
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s
    networks:
      - cloud-drive-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - cloud-drive-network

  # Hadoop HDFS NameNode
  hadoop-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64
    container_name: hadoop-namenode
    restart: always
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=clouddrive
      - CORE_CONF_fs_defaultFS=hdfs://hadoop-namenode:9000
    networks:
      - cloud-drive-network

  # Hadoop HDFS DataNode
  hadoop-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64
    container_name: hadoop-datanode
    restart: always
    ports:
      - "9864:9864"
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://hadoop-namenode:9000
    depends_on:
      - hadoop-namenode
    networks:
      - cloud-drive-network

  # Flink JobManager
  flink-jobmanager:
    image: flink:1.15.2-scala_2.12
    container_name: flink-jobmanager
    ports:
      - "8085:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - cloud-drive-network

  # Flink TaskManager
  flink-taskmanager:
    image: flink:1.15.2-scala_2.12
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - cloud-drive-network

volumes:
  mysql_data:
    driver: local
  nacos_data:
    driver: local
  hadoop_namenode:
    driver: local
  hadoop_datanode:
    driver: local

networks:
  cloud-drive-network:
    driver: bridge